"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.authenticateCheckoutFactory = void 0;
var tslib_1 = require("tslib");
var helpers_1 = require("../../helpers");
function authenticateCheckoutFactory(params) {
    return function authenticateCheckout(request, options) {
        var _a;
        if (options === void 0) { options = {}; }
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var logger, corsHeaders, sessionTokenHeader;
            var _b;
            return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        logger = params.logger;
                        corsHeaders = (_a = options.corsHeaders) !== null && _a !== void 0 ? _a : [];
                        (0, helpers_1.respondToBotRequest)(params, request);
                        (0, helpers_1.respondToOptionsRequest)(params, request, corsHeaders);
                        sessionTokenHeader = (0, helpers_1.getSessionTokenHeader)(request);
                        logger.info('Authenticating checkout request');
                        if (!sessionTokenHeader) {
                            logger.debug('Request did not contain a session token');
                            throw new Response(undefined, {
                                status: 401,
                                statusText: 'Unauthorized',
                            });
                        }
                        _b = {};
                        return [4 /*yield*/, (0, helpers_1.validateSessionToken)(params, sessionTokenHeader, {
                                checkAudience: false,
                            })];
                    case 1: return [2 /*return*/, (_b.sessionToken = _c.sent(),
                            _b.cors = (0, helpers_1.ensureCORSHeadersFactory)(params, request, corsHeaders),
                            _b)];
                }
            });
        });
    };
}
exports.authenticateCheckoutFactory = authenticateCheckoutFactory;
//# sourceMappingURL=authenticate.js.map