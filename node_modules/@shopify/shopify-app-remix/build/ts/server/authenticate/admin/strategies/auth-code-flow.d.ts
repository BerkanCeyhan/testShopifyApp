import { Session, Shopify, ShopifyRestResources } from '@shopify/shopify-api';
import type { BasicParams } from '../../../types';
import { AppConfig } from '../../../config-types';
import { AuthorizationStrategy } from './types';
export declare class AuthCodeFlowStrategy<Resources extends ShopifyRestResources = ShopifyRestResources> implements AuthorizationStrategy {
    protected api: Shopify;
    protected config: AppConfig;
    protected logger: Shopify['logger'];
    constructor({ api, config, logger }: BasicParams);
    respondToOAuthRequests(request: Request): Promise<void | never>;
    authenticate(request: Request, session: Session | undefined, shop: string): Promise<Session | never>;
    private ensureInstalledOnShop;
    private handleAuthBeginRequest;
    private handleAuthCallbackRequest;
    private getOfflineSession;
    private hasValidOfflineId;
    private getOfflineSessionId;
    private testSession;
    private oauthCallbackError;
    private handleInvalidOfflineSession;
}
//# sourceMappingURL=auth-code-flow.d.ts.map