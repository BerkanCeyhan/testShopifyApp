'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var shopifyApi = require('@shopify/shopify-api');
var factory = require('../../clients/admin/factory.js');
var getOfflineSession = require('../helpers/get-offline-session.js');

function unauthenticatedAdminContextFactory(params) {
  return async shop => {
    const session = await getOfflineSession.getOfflineSession(shop, params);
    if (!session) {
      throw new shopifyApi.ShopifyError(`Could not find a session for shop ${shop} when creating unauthenticated admin context`);
    }
    return {
      session,
      admin: factory.adminClientFactory({
        params,
        session
      })
    };
  };
}

exports.unauthenticatedAdminContextFactory = unauthenticatedAdminContextFactory;
