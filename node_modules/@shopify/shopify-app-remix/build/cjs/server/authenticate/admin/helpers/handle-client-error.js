'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var shopifyApi = require('@shopify/shopify-api');
var redirectToAuthPage = require('./redirect-to-auth-page.js');

function handleClientErrorFactory({
  request
}) {
  return async function handleClientError({
    error,
    params,
    session
  }) {
    if (error instanceof shopifyApi.HttpResponseError !== true) {
      params.logger.debug(`Got a response error from the API: ${error.message}`);
      throw error;
    }
    params.logger.debug(`Got an HTTP response error from the API: ${error.message}`, {
      code: error.response.code,
      statusText: error.response.statusText,
      body: JSON.stringify(error.response.body)
    });
    if (error.response.code === 401) {
      throw await redirectToAuthPage.redirectToAuthPage(params, request, session.shop);
    }

    // forward a minimal copy of the upstream HTTP response instead of an Error:
    throw new Response(JSON.stringify(error.response.body), {
      status: error.response.code,
      headers: {
        'Content-Type': error.response.headers['Content-Type']
      }
    });
  };
}

exports.handleClientErrorFactory = handleClientErrorFactory;
