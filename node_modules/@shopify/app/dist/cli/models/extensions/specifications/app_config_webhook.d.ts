export declare const WebhookSchema: import("zod").ZodObject<Pick<{
    name: import("zod").ZodString;
    client_id: import("zod").ZodString;
    application_url: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
    embedded: import("zod").ZodBoolean;
    access_scopes: import("zod").ZodOptional<import("zod").ZodObject<{
        scopes: import("zod").ZodOptional<import("zod").ZodString>;
        use_legacy_install_flow: import("zod").ZodOptional<import("zod").ZodBoolean>;
    }, "strip", import("zod").ZodTypeAny, {
        scopes?: string | undefined;
        use_legacy_install_flow?: boolean | undefined;
    }, {
        scopes?: string | undefined;
        use_legacy_install_flow?: boolean | undefined;
    }>>;
    auth: import("zod").ZodOptional<import("zod").ZodObject<{
        redirect_urls: import("zod").ZodArray<import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>, "many">;
    }, "strip", import("zod").ZodTypeAny, {
        redirect_urls: string[];
    }, {
        redirect_urls: string[];
    }>>;
    access: import("zod").ZodOptional<import("zod").ZodObject<{
        direct_api_offline_access: import("zod").ZodOptional<import("zod").ZodBoolean>;
    }, "strip", import("zod").ZodTypeAny, {
        direct_api_offline_access?: boolean | undefined;
    }, {
        direct_api_offline_access?: boolean | undefined;
    }>>;
    webhooks: import("zod").ZodEffects<import("zod").ZodObject<{
        api_version: import("zod").ZodString;
        privacy_compliance: import("zod").ZodOptional<import("zod").ZodObject<{
            customer_deletion_url: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>, string, string>>;
            customer_data_request_url: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>, string, string>>;
            shop_deletion_url: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>, string, string>>;
        }, "strip", import("zod").ZodTypeAny, {
            customer_deletion_url?: string | undefined;
            customer_data_request_url?: string | undefined;
            shop_deletion_url?: string | undefined;
        }, {
            customer_deletion_url?: string | undefined;
            customer_data_request_url?: string | undefined;
            shop_deletion_url?: string | undefined;
        }>>;
        topics: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "atleastone">>;
        uri: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodUnion<[import("zod").ZodString, import("zod").ZodString, import("zod").ZodString]>, string, unknown>>;
        subscriptions: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodObject<{
            topic: import("zod").ZodString;
            uri: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodUnion<[import("zod").ZodString, import("zod").ZodString, import("zod").ZodString]>, string, unknown>>;
            sub_topic: import("zod").ZodOptional<import("zod").ZodString>;
            include_fields: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
            metafield_namespaces: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
            path: import("zod").ZodOptional<import("zod").ZodEffects<import("zod").ZodString, string, string>>;
        }, "strip", import("zod").ZodTypeAny, {
            topic: string;
            uri?: string | undefined;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            path?: string | undefined;
        }, {
            topic: string;
            uri?: unknown;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            path?: string | undefined;
        }>, "many">>;
    }, "strip", import("zod").ZodTypeAny, {
        api_version: string;
        privacy_compliance?: {
            customer_deletion_url?: string | undefined;
            customer_data_request_url?: string | undefined;
            shop_deletion_url?: string | undefined;
        } | undefined;
        topics?: [string, ...string[]] | undefined;
        uri?: string | undefined;
        subscriptions?: {
            topic: string;
            uri?: string | undefined;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            path?: string | undefined;
        }[] | undefined;
    }, {
        api_version: string;
        privacy_compliance?: {
            customer_deletion_url?: string | undefined;
            customer_data_request_url?: string | undefined;
            shop_deletion_url?: string | undefined;
        } | undefined;
        topics?: [string, ...string[]] | undefined;
        uri?: unknown;
        subscriptions?: {
            topic: string;
            uri?: unknown;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            path?: string | undefined;
        }[] | undefined;
    }>, {
        api_version: string;
        privacy_compliance?: {
            customer_deletion_url?: string | undefined;
            customer_data_request_url?: string | undefined;
            shop_deletion_url?: string | undefined;
        } | undefined;
        topics?: [string, ...string[]] | undefined;
        uri?: string | undefined;
        subscriptions?: {
            topic: string;
            uri?: string | undefined;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            path?: string | undefined;
        }[] | undefined;
    }, {
        api_version: string;
        privacy_compliance?: {
            customer_deletion_url?: string | undefined;
            customer_data_request_url?: string | undefined;
            shop_deletion_url?: string | undefined;
        } | undefined;
        topics?: [string, ...string[]] | undefined;
        uri?: unknown;
        subscriptions?: {
            topic: string;
            uri?: unknown;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            path?: string | undefined;
        }[] | undefined;
    }>;
    app_proxy: import("zod").ZodOptional<import("zod").ZodObject<{
        url: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
        subpath: import("zod").ZodString;
        prefix: import("zod").ZodString;
    }, "strip", import("zod").ZodTypeAny, {
        url: string;
        subpath: string;
        prefix: string;
    }, {
        url: string;
        subpath: string;
        prefix: string;
    }>>;
    pos: import("zod").ZodOptional<import("zod").ZodObject<{
        embedded: import("zod").ZodBoolean;
    }, "strip", import("zod").ZodTypeAny, {
        embedded: boolean;
    }, {
        embedded: boolean;
    }>>;
    app_preferences: import("zod").ZodOptional<import("zod").ZodObject<{
        url: import("zod").ZodEffects<import("zod").ZodEffects<import("zod").ZodString, string, string>, string, string>;
    }, "strip", import("zod").ZodTypeAny, {
        url: string;
    }, {
        url: string;
    }>>;
    build: import("zod").ZodOptional<import("zod").ZodObject<{
        automatically_update_urls_on_dev: import("zod").ZodOptional<import("zod").ZodBoolean>;
        dev_store_url: import("zod").ZodOptional<import("zod").ZodString>;
    }, "strip", import("zod").ZodTypeAny, {
        automatically_update_urls_on_dev?: boolean | undefined;
        dev_store_url?: string | undefined;
    }, {
        automatically_update_urls_on_dev?: boolean | undefined;
        dev_store_url?: string | undefined;
    }>>;
    extension_directories: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
    web_directories: import("zod").ZodOptional<import("zod").ZodArray<import("zod").ZodString, "many">>;
}, "webhooks">, "strip", import("zod").ZodTypeAny, {
    webhooks: {
        api_version: string;
        privacy_compliance?: {
            customer_deletion_url?: string | undefined;
            customer_data_request_url?: string | undefined;
            shop_deletion_url?: string | undefined;
        } | undefined;
        topics?: [string, ...string[]] | undefined;
        uri?: string | undefined;
        subscriptions?: {
            topic: string;
            uri?: string | undefined;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            path?: string | undefined;
        }[] | undefined;
    };
}, {
    webhooks: {
        api_version: string;
        privacy_compliance?: {
            customer_deletion_url?: string | undefined;
            customer_data_request_url?: string | undefined;
            shop_deletion_url?: string | undefined;
        } | undefined;
        topics?: [string, ...string[]] | undefined;
        uri?: unknown;
        subscriptions?: {
            topic: string;
            uri?: unknown;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            path?: string | undefined;
        }[] | undefined;
    };
}>;
declare const spec: import("../specification.js").ExtensionSpecification<{
    name: string;
    type: string;
    metafields: {
        namespace: string;
        key: string;
    }[];
    handle?: string | undefined;
    description?: string | undefined;
    api_version?: string | undefined;
    extension_points?: any;
    capabilities?: {
        network_access?: boolean | undefined;
        block_progress?: boolean | undefined;
        api_access?: boolean | undefined;
        collect_buyer_consent?: {
            sms_marketing?: boolean | undefined;
            write_privacy_consent?: boolean | undefined;
        } | undefined;
    } | undefined;
    settings?: {
        fields?: {
            type: string;
            key?: string | undefined;
            name?: string | undefined;
            description?: string | undefined;
            required?: boolean | undefined;
            validations?: any[] | undefined;
        }[] | undefined;
    } | undefined;
}>;
export declare function transformWebhookConfig(content: object): {
    subscriptions: {
        topic: string;
        sub_topic?: string | undefined;
        include_fields?: string[] | undefined;
        metafield_namespaces?: string[] | undefined;
        uri: string | undefined;
    }[];
} | {
    subscriptions?: undefined;
};
export declare function transformToWebhookConfig(content: object): {
    webhooks: {
        uri: string | undefined;
        topics: string[];
        subscriptions: {
            topic: string;
            uri?: string | undefined;
            sub_topic?: string | undefined;
            include_fields?: string[] | undefined;
            metafield_namespaces?: string[] | undefined;
            path?: string | undefined;
        }[];
    };
};
export default spec;
