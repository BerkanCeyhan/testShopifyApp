{"version":3,"file":"app_config_webhook.js","sourceRoot":"","sources":["../../../../../src/cli/models/extensions/specifications/app_config_webhook.ts"],"names":[],"mappings":"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","sourcesContent":["import {CustomTransformationConfig, createConfigExtensionSpecification} from '../specification.js'\nimport {AppSchema, NormalizedWebhookSubscription, WebhookConfig} from '../../app/app.js'\nimport {getPathValue} from '@shopify/cli-kit/common/object'\n\nexport const WebhookSchema = AppSchema.pick({webhooks: true}).strip()\n\nconst WebhookTransformConfig: CustomTransformationConfig = {\n  forward: (content: object) => transformWebhookConfig(content),\n  reverse: (content: object) => transformToWebhookConfig(content),\n}\n\nconst spec = createConfigExtensionSpecification({\n  identifier: 'webhooks',\n  schema: WebhookSchema,\n  transformConfig: WebhookTransformConfig,\n})\n\n// Transform methods\nexport function transformWebhookConfig(content: object) {\n  const webhooks = getPathValue(content, 'webhooks') as WebhookConfig\n\n  // normalize webhook config with the top level config\n  const webhookSubscriptions = []\n  const {topics, subscriptions, uri} = webhooks\n\n  if (uri && topics?.length) {\n    for (const topic of topics) {\n      webhookSubscriptions.push({\n        topic,\n        uri,\n      })\n    }\n  }\n\n  if (subscriptions?.length) {\n    for (const {path, uri: localUri, ...subscription} of subscriptions) {\n      // we can assume this is valid from earlier validation, and local URI will overwrite top level if there is any\n      const subscriptionConfig = {\n        uri: localUri || uri,\n        ...subscription,\n      }\n\n      if (path) {\n        subscriptionConfig.uri = `${subscriptionConfig.uri}${path}`\n      }\n\n      webhookSubscriptions.push(subscriptionConfig)\n    }\n  }\n  return webhookSubscriptions.length > 0 ? {subscriptions: webhookSubscriptions} : {}\n}\n\nexport function transformToWebhookConfig(content: object) {\n  const serverWebhooks = getPathValue(content, 'subscriptions') as NormalizedWebhookSubscription[]\n  const frequencyMap: {[key: string]: number} = {}\n  serverWebhooks.forEach((item) => {\n    frequencyMap[item.uri!] = (frequencyMap[item.uri!] || 0) + 1\n  })\n  const maxCount = Math.max(...Object.values(frequencyMap))\n  const defaultUri = Object.keys(frequencyMap).find((key) => frequencyMap[key] === maxCount)\n\n  const topics: string[] = []\n  const subscriptions: NormalizedWebhookSubscription[] = []\n\n  for (const item of serverWebhooks) {\n    if (item.uri === defaultUri && !item.sub_topic && !item.include_fields && !item.metafield_namespaces) {\n      topics.push(item.topic)\n    } else {\n      let path: string | undefined\n      let uri: string | undefined\n\n      // If the URI starts with the defaultUri, extract the rest of the string as the path\n      if (item.uri!.startsWith(defaultUri!)) {\n        path = item.uri!.slice(defaultUri!.length)\n      } else {\n        // If the URI does not start with the defaultUri, extract the path using a regular expression\n        const pathMatch = item.uri!.match(/^[^:]+:\\/\\/[^/]+\\/(.*)/)\n        path = pathMatch ? pathMatch[1] : undefined\n        uri = item.uri\n      }\n\n      // Exclude undefined keys from the subscription object\n      const subscription: NormalizedWebhookSubscription = {...item}\n      if (path) subscription.path = path\n      if (uri) subscription.uri = uri\n      if (item.uri!.startsWith(defaultUri!)) {\n        delete subscription.uri\n      }\n      subscriptions.push(subscription)\n    }\n  }\n\n  return {webhooks: {uri: defaultUri, topics, subscriptions}}\n}\n\nexport default spec\n"]}