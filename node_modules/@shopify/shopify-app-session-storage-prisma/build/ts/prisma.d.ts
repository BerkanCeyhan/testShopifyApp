import { Session } from '@shopify/shopify-api';
import { SessionStorage } from '@shopify/shopify-app-session-storage';
import type { PrismaClient } from '@prisma/client';
interface PrismaSessionStorageOptions {
    tableName?: string;
}
export declare class PrismaSessionStorage<T extends PrismaClient> implements SessionStorage {
    private prisma;
    private ready;
    private readonly tableName;
    constructor(prisma: T, { tableName }?: PrismaSessionStorageOptions);
    storeSession(session: Session): Promise<boolean>;
    loadSession(id: string): Promise<Session | undefined>;
    deleteSession(id: string): Promise<boolean>;
    deleteSessions(ids: string[]): Promise<boolean>;
    findSessionsByShop(shop: string): Promise<Session[]>;
    private sessionToRow;
    private rowToSession;
    private getSessionTable;
}
export declare class MissingSessionTableError extends Error {
}
export {};
//# sourceMappingURL=prisma.d.ts.map